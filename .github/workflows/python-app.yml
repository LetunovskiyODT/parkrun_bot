# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Quality&Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  LANG: ru_RU.UTF-8

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
    - uses: actions/checkout@v2
    - name: Set up locale
      run: |
        sudo locale-gen ru_RU.UTF-8
        sudo update-locale LANG=ru_RU.UTF-8
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.10
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r tests/requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov-report=xml --cov=. tests/
      env:
        API_BOT_TOKEN: ${{ secrets.API_BOT_TOKEN }}
        OWM_TOKEN: ${{ secrets.OWM_TOKEN }}
        WEBHOOK: ${{ secrets.WEBHOOK }}
        IG_PASSWORD: ${{ secrets.IG_PASSWORD }}
        IG_USERNAME: ${{ secrets.IG_USERNAME }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_CX: ${{ secrets.GOOGLE_CX }}
        VK_SERVICE_TOKEN: ${{ secrets.VK_SERVICE_TOKEN }}
        REDIS_URL: redis://localhost:6379
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        directory: ./coverage/reports/
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: false
